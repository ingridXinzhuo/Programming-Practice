//4th apri 2020

1001.A+B和C (15)
输入描述:
输入第1行给出正整数T(<=10)，是测试用例的个数。随后给出T组测试用例，每组占一行，顺序给出A、B和C。整数间以空格分隔。
输出描述:
对每组测试用例，在一行中输出“Case #X: true”如果A+B>C，否则输出“Case #X: false”，其中X是测试用例的编号（从1开始）。
输入例子:
4
1 2 3
2 3 4
2147483647 0 2147483646
0 -2147483648 -2147483647
输出例子:
Case #1: false
Case #2: true
Case #3: true
Case #4: false

import java.util.Scanner;
public class Main{
public static void main(String[] args){
    Scanner console = new Scanner(System.in);
    long length = Integer.parseInt(console.nextLine());
    for (int i = 0; i < length; i++){
        String[] tempArr = console.nextLine().split(" ");
        long a = Long.parseLong(tempArr[0]);
        long b = Long.parseLong(tempArr[1]);
        long c = Long.parseLong(tempArr[2]);
        try{
            if( a + b > c)
                System.out.println("Case #" + (i + 1) + ": true");
            else
                System.out.println("Case #" + (i + 1) + ": false");
        }
        catch(Exception e){
            System.out.println("Case #" + (i + 1) + ": false");
        }
    }
  }
}

**************笔记
对我来说的难点竟然是long的转化。。。用interger parse一直报错还不知道为啥。。。
以前没有用过long但现在会了！

---------------------------------------------------------------------------------------------------------

1002.数字分类 (20)
给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：

A1 = 能被5整除的数字中所有偶数的和；
A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4...；
A3 = 被5除后余2的数字的个数；
A4 = 被5除后余3的数字的平均数，精确到小数点后1位；
A5 = 被5除后余4的数字中最大数字。
输入描述:
每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N，随后给出N个不超过1000的待分类的正整数。数字间以空格分隔。
输出描述:
对给定的N个正整数，按题目要求计算A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。
若其中某一类数字不存在，则在相应位置输出“N”。

输入例子:
13 1 2 3 4 5 6 7 8 9 10 20 16 18

输出例子:
30 11 2 9.7 9

import java.util.Scanner;
import java.util.ArrayList;
public class Main{
    public static void main(String[] args){
        int a1 = 0,a2 = 0,a3 = 0,a4Sum = 0,a5 = 0,a4Count = 0; 
        double a4Double = 0.00;
        String a4 = "";
        Scanner console = new Scanner(System.in);
        ArrayList<Integer> arr = new ArrayList<>();
        ArrayList<Integer> case1 = new ArrayList<>();
        String[] temp = console.nextLine().split(" ");
        for (int i = 1; i <= Integer.parseInt(temp[0]);i++)
            arr.add(Integer.parseInt(temp[i]));
        for (int i = 0; i < arr.size();i++){
            int ele = arr.get(i);
            switch(ele % 5){
                case 0: if (ele % 2 == 0) a1 += ele;break;
                case 1:case1.add(ele);break;
                case 2:a3 ++;break;
                case 3:a4Sum += ele;a4Count++;break;
                case 4:if(ele > a5)a5 = ele;
            }
        }
        for (int i = 0; i < case1.size();i++){
            if (i % 2 == 0)
                a2 += case1.get(i);
            else
                a2 -= case1.get(i);
        }
        if (a4Count != 0){
            double sumDouble = (double)a4Sum;
            a4 = String.format("%.1f",sumDouble/a4Count);
        }
        System.out.print((a1 == 0 ? "N" : String.valueOf(a1)) + " ");
        System.out.print((a2 == 0 ? "N" : String.valueOf(a2)) + " ");
        System.out.print((a3 == 0 ? "N" : String.valueOf(a3)) + " ");
        System.out.print((a4Count == 0 ? "N" : a4) + " ");
        System.out.println(a5 == 0 ? "N" : String.valueOf(a5));
    }
}


**************笔记
对我来说最大的难点是a4的花式转化。
首先，两个int相除肯定是int，所以之前运行double的精度一直不对，上火半天发现是int的运算。。。
其次，double的精度也不会写，现查的。
其他的感觉就没什么了，思路还是比较清晰的。
